// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.mjs";
import * as React from "react";
import * as ReForm from "@rescriptbr/reform/src/ReForm.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.mjs";
import * as ReForm__Helpers from "@rescriptbr/reform/src/ReForm__Helpers.bs.js";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";
import * as CardStyles$RescriptReactIntro from "./CardStyles.bs.js";

function get(values, field) {
  switch (field) {
    case /* Title */0 :
        return values.title;
    case /* Ingredients */1 :
        return values.ingredients;
    case /* Instructions */2 :
        return values.instructions;
    
  }
}

function set(values, field, value) {
  switch (field) {
    case /* Title */0 :
        return {
                title: value,
                ingredients: values.ingredients,
                instructions: values.instructions
              };
    case /* Ingredients */1 :
        return {
                title: values.title,
                ingredients: value,
                instructions: values.instructions
              };
    case /* Instructions */2 :
        return {
                title: values.title,
                ingredients: values.ingredients,
                instructions: value
              };
    
  }
}

var FormFields = {
  get: get,
  set: set
};

var UserForm = ReForm.Make({
      set: set,
      get: get
    });

function AddRecipeForm(Props) {
  var dispatch = Props.dispatch;
  var form = Curry._7(UserForm.use, {
        title: "",
        ingredients: "",
        instructions: ""
      }, /* Schema */{
        _0: Curry._2(UserForm.ReSchema.Validation.$plus, Curry._2(UserForm.ReSchema.Validation.$plus, Curry._2(UserForm.ReSchema.Validation.$plus, Curry._2(UserForm.ReSchema.Validation.$plus, Curry._2(UserForm.ReSchema.Validation.$plus, Curry._2(UserForm.ReSchema.Validation.$plus, Curry._2(UserForm.ReSchema.Validation.$plus, Curry._3(UserForm.ReSchema.Validation.nonEmpty, "Title is required", undefined, /* Title */0), Curry._6(UserForm.ReSchema.Validation.string, 3, undefined, undefined, undefined, undefined, /* Title */0)), Curry._3(UserForm.ReSchema.Validation.custom, (function (state) {
                                        if (state.title === state.ingredients) {
                                          return {
                                                  TAG: /* Error */1,
                                                  _0: "Title not be equal igredient"
                                                };
                                        } else {
                                          return /* Valid */0;
                                        }
                                      }), undefined, /* Title */0)), Curry._3(UserForm.ReSchema.Validation.custom, (function (state) {
                                    if (state.title === state.ingredients) {
                                      return {
                                              TAG: /* Error */1,
                                              _0: "Ingredients not be equal titles"
                                            };
                                    } else {
                                      return /* Valid */0;
                                    }
                                  }), undefined, /* Ingredients */1)), Curry._3(UserForm.ReSchema.Validation.nonEmpty, "Ingredients is required", undefined, /* Ingredients */1)), Curry._6(UserForm.ReSchema.Validation.string, 3, undefined, undefined, undefined, undefined, /* Ingredients */1)), Curry._3(UserForm.ReSchema.Validation.nonEmpty, "Instructionns is required", undefined, /* Instructions */2)), Curry._6(UserForm.ReSchema.Validation.string, 3, undefined, undefined, undefined, undefined, /* Instructions */2))
      }, (function (state) {
          console.log(state);
          
        }), undefined, undefined, /* OnChange */0, undefined);
  var s = Curry._1(form.getFieldError, /* Field */{
        _0: /* Title */0
      });
  var errorInTitle = s !== undefined ? s : "";
  var s$1 = Curry._1(form.getFieldError, /* Field */{
        _0: /* Instructions */2
      });
  var errorInInstructions = s$1 !== undefined ? s$1 : "";
  var s$2 = Curry._1(form.getFieldError, /* Field */{
        _0: /* Ingredients */1
      });
  var errorInIngredients = s$2 !== undefined ? s$2 : "";
  var isDisabled = Belt_Option.isSome(Curry._1(form.getFieldError, /* Field */{
            _0: /* Title */0
          })) || Belt_Option.isSome(Curry._1(form.getFieldError, /* Field */{
            _0: /* Instructions */2
          })) || Belt_Option.isSome(Curry._1(form.getFieldError, /* Field */{
            _0: /* Ingredients */1
          }));
  var partial_arg = Curry._1(form.handleChange, /* Title */0);
  var partial_arg$1 = Curry._1(form.handleChange, /* Ingredients */1);
  var partial_arg$2 = Curry._1(form.handleChange, /* Instructions */2);
  return React.createElement("form", {
              className: CardStyles$RescriptReactIntro.formCard,
              onSubmit: (function ($$event) {
                  $$event.preventDefault();
                  Curry._1(dispatch, {
                        TAG: /* AddRecipe */0,
                        title: form.values.title,
                        ingredients: form.values.ingredients,
                        instructions: form.values.instructions
                      });
                  RescriptReactRouter.push("/recipes/" + form.values.title);
                  return Curry._1(form.submit, undefined);
                })
            }, React.createElement("div", undefined, React.createElement("input", {
                      placeholder: "Title",
                      value: form.values.title,
                      onChange: (function (param) {
                          return ReForm__Helpers.handleChange(partial_arg, param);
                        })
                    }), React.createElement("h4", undefined, errorInTitle)), React.createElement("div", undefined, React.createElement("label", undefined, React.createElement("h3", undefined, "Ingredients"), React.createElement("textarea", {
                          value: form.values.ingredients,
                          onChange: (function (param) {
                              return ReForm__Helpers.handleChange(partial_arg$1, param);
                            })
                        }), React.createElement("h4", undefined, errorInIngredients))), React.createElement("div", undefined, React.createElement("label", undefined, React.createElement("h3", undefined, "Instructions"), React.createElement("textarea", {
                          value: form.values.instructions,
                          onChange: (function (param) {
                              return ReForm__Helpers.handleChange(partial_arg$2, param);
                            })
                        }), React.createElement("h4", undefined, errorInInstructions))), React.createElement("button", {
                  className: "button",
                  disabled: isDisabled,
                  type: "submit"
                }, "Adicionar"));
}

var make = AddRecipeForm;

export {
  FormFields ,
  UserForm ,
  make ,
  
}
/* UserForm Not a pure module */
